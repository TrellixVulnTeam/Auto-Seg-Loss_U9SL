2020-10-01 14:29:34,916 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.7.9 (default, Aug 31 2020, 12:42:55) [GCC 7.3.0]
CUDA available: True
CUDA_HOME: /mnt/lustre/share/cuda-10.1/:/mnt/lustre/share/cuda-10.1/:
GPU 0,1,2,3,4,5,6,7: Tesla V100-PCIE-16GB
GCC: gcc (GCC) 7.3.0
PyTorch: 1.5.0
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.2 Product Build 20200624 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v0.21.1 (Git Hash 7d2fd500bc78936d1d648ca713b901012f470dbc)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 10.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_37,code=compute_37
  - CuDNN 7.6.3
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_INTERNAL_THREADPOOL_IMPL -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_STATIC_DISPATCH=OFF, 

TorchVision: 0.6.0a0+82fd1c8
OpenCV: 4.4.0
MMCV: 1.1.3
MMSegmentation: 0.5.0+00f56eb
MMCV Compiler: GCC 7.3
MMCV CUDA Compiler: 10.1
------------------------------------------------------------

2020-10-01 14:29:34,917 - mmseg - INFO - Distributed training: True
2020-10-01 14:29:35,980 - mmseg - INFO - Config:
norm_cfg = dict(type='SyncBN', requires_grad=True)
dist_params = dict(backend='nccl', port=18844)
workflow = [('train', 1)]
optimizer = dict(
    type='SGD',
    lr=0.02,
    momentum=0.9,
    weight_decay=0.0005,
    paramwise_cfg=dict(custom_keys=dict(head=dict(lr_mult=10.0))))
optimizer_config = dict(type='Fp16OptimizerHook', loss_scale=512.0)
lr_config = dict(policy='poly', power=0.9, min_lr=0.0001, by_epoch=False)
load_from = None
resume_from = None
total_iters = 10000
checkpoint_config = dict(by_epoch=False, interval=2000)
evaluation = dict(interval=10000, metric='mIoU')
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=2,
    train=dict(
        type='PascalVOCDataset',
        data_root='/mnt/lustre/lihao2/mmsegmentation/data/VOCdevkit/VOC2012',
        img_dir='JPEGImages',
        ann_dir=['SegmentationClass', 'SegmentationClassAug'],
        split=[
            'ImageSets/Segmentation/train.txt',
            'ImageSets/Segmentation/aug.txt'
        ],
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(
                    backend='memcached',
                    server_list_cfg=
                    '/mnt/lustre/share/memcached_client/server_list.conf',
                    client_cfg='/mnt/lustre/lihao2/memcached_client/client.conf'
                )),
            dict(
                type='LoadAnnotations',
                file_client_args=dict(
                    backend='memcached',
                    server_list_cfg=
                    '/mnt/lustre/share/memcached_client/server_list.conf',
                    client_cfg='/mnt/lustre/lihao2/memcached_client/client.conf'
                )),
            dict(type='Resize', img_scale=(2048, 512), ratio_range=(0.5, 2.0)),
            dict(type='RandomCrop', crop_size=(512, 512), cat_max_ratio=0.75),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(512, 512), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='PascalVOCDataset',
        data_root='/mnt/lustre/lihao2/mmsegmentation/data/VOCdevkit/VOC2012',
        img_dir='JPEGImages',
        ann_dir='SegmentationClass',
        split='ImageSets/Segmentation/val.txt',
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(
                    backend='memcached',
                    server_list_cfg=
                    '/mnt/lustre/share/memcached_client/server_list.conf',
                    client_cfg='/mnt/lustre/lihao2/memcached_client/client.conf'
                )),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='PascalVOCDataset',
        data_root='/mnt/lustre/lihao2/mmsegmentation/data/VOCdevkit/VOC2012',
        img_dir='JPEGImages',
        ann_dir='SegmentationClass',
        split='ImageSets/Segmentation/val.txt',
        pipeline=[
            dict(
                type='LoadImageFromFile',
                file_client_args=dict(
                    backend='memcached',
                    server_list_cfg=
                    '/mnt/lustre/share/memcached_client/server_list.conf',
                    client_cfg='/mnt/lustre/lihao2/memcached_client/client.conf'
                )),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 512),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
model = dict(
    type='EncoderDecoder',
    pretrained='open-mmlab://resnet101_v1c',
    backbone=dict(
        type='ResNetV1c',
        depth=101,
        num_stages=4,
        out_indices=(0, 1, 2, 3),
        dilations=(1, 1, 2, 4),
        strides=(1, 2, 1, 1),
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        norm_eval=False,
        style='pytorch',
        contract_dilation=True),
    decode_head=dict(
        type='DepthwiseSeparableASPPHead',
        in_channels=2048,
        in_index=3,
        channels=512,
        dilations=(1, 12, 24, 36),
        c1_in_channels=256,
        c1_channels=48,
        dropout_ratio=0.1,
        num_classes=21,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='Metric_Bf1_Bezier_Loss',
            num_class=21,
            theta=[
                0.8113003373146057, 0.8526162505149841, 0.17164576053619385,
                0.03164796531200409, 0.20997394621372223, 0.44903290271759033,
                0.07847517728805542, 0.8753038048744202
            ],
            drop_bg=False,
            loss_weight=1.0)),
    auxiliary_head=dict(
        type='FCNHead',
        in_channels=1024,
        in_index=2,
        channels=256,
        num_convs=1,
        concat_input=False,
        dropout_ratio=0.1,
        num_classes=21,
        norm_cfg=dict(type='SyncBN', requires_grad=True),
        align_corners=False,
        loss_decode=dict(
            type='Metric_Bf1_Bezier_Loss',
            num_class=21,
            theta=[
                0.8113003373146057, 0.8526162505149841, 0.17164576053619385,
                0.03164796531200409, 0.20997394621372223, 0.44903290271759033,
                0.07847517728805542, 0.8753038048744202
            ],
            drop_bg=False,
            loss_weight=0.4)))
train_cfg = dict()
test_cfg = dict(mode='whole')
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
log_level = 'INFO'
cudnn_benchmark = True
work_dir = '/mnt/lustre/lihao2/mmsegmentation/exp/retrain_voc/bf1/bf1_bezier_10k_all_withbg/'
gpu_ids = range(0, 1)

2020-10-01 14:29:35,980 - mmseg - INFO - Set random seed to 1, deterministic: False
2020-10-01 14:29:44,297 - mmseg - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

2020-10-01 14:29:44,299 - mmseg - INFO - EncoderDecoder(
  (backbone): ResNetV1c(
    (stem): Sequential(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): SyncBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU(inplace=True)
      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (7): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU(inplace=True)
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer2): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer3): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (3): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (4): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (5): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (6): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (7): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (8): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (9): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (10): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (11): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (12): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (13): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (14): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (15): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (16): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (17): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (18): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (19): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (20): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (21): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (22): Bottleneck(
        (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
    (layer4): ResLayer(
      (0): Bottleneck(
        (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
        (downsample): Sequential(
          (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (1): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
      (2): Bottleneck(
        (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn1): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn2): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn3): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU(inplace=True)
      )
    )
  )
  (decode_head): DepthwiseSeparableASPPHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): Metric_Bf1_Bezier_Loss(
      (input_softmax): Softmax(dim=1)
      (sigmoid): Sigmoid()
    )
    (conv_seg): Conv2d(512, 21, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (image_pool): Sequential(
      (0): AdaptiveAvgPool2d(output_size=1)
      (1): ConvModule(
        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (aspp_modules): DepthwiseSeparableASPPModule(
      (0): ConvModule(
        (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (2): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(24, 24), dilation=(24, 24), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (3): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(36, 36), dilation=(36, 36), groups=2048, bias=False)
          (bn): SyncBatchNorm(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    (bottleneck): ConvModule(
      (conv): Conv2d(2560, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (c1_bottleneck): ConvModule(
      (conv): Conv2d(256, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): SyncBatchNorm(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (sep_bottleneck): Sequential(
      (0): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(560, 560, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=560, bias=False)
          (bn): SyncBatchNorm(560, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(560, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
      (1): DepthwiseSeparableConvModule(
        (depthwise_conv): ConvModule(
          (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=512, bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (pointwise_conv): ConvModule(
          (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (bn): SyncBatchNorm(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
  )
  (auxiliary_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=False
    (loss_decode): Metric_Bf1_Bezier_Loss(
      (input_softmax): Softmax(dim=1)
      (sigmoid): Sigmoid()
    )
    (conv_seg): Conv2d(256, 21, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(1024, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
)
2020-10-01 14:29:44,361 - mmseg - INFO - Loaded 1464 images
2020-10-01 14:29:44,419 - mmseg - INFO - Loaded 9118 images
2020-10-01 14:29:46,187 - mmseg - INFO - Loaded 1449 images
2020-10-01 14:29:46,188 - mmseg - INFO - Start running, host: lihao2@SH-IDC1-10-5-36-171, work_dir: /mnt/lustre/lihao2/mmsegmentation/exp/retrain_voc/bf1/bf1_bezier_10k_all_withbg
2020-10-01 14:29:46,188 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2020-10-01 14:31:20,627 - mmseg - INFO - Iter [50/10000]	lr: 1.991e-02, eta: 2:39:17, time: 0.961, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9874, decode.acc_seg: 46.1728, aux.loss_seg: 0.3952, aux.acc_seg: 33.0382, loss: 1.3825
2020-10-01 14:31:55,597 - mmseg - INFO - Iter [100/10000]	lr: 1.982e-02, eta: 2:16:56, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9866, decode.acc_seg: 40.0365, aux.loss_seg: 0.3950, aux.acc_seg: 54.3967, loss: 1.3816
2020-10-01 14:32:30,446 - mmseg - INFO - Iter [150/10000]	lr: 1.973e-02, eta: 2:08:58, time: 0.697, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9836, decode.acc_seg: 14.3190, aux.loss_seg: 0.3948, aux.acc_seg: 53.7494, loss: 1.3784
2020-10-01 14:33:05,413 - mmseg - INFO - Iter [200/10000]	lr: 1.964e-02, eta: 2:04:47, time: 0.699, data_time: 0.011, memory: 12264, decode.loss_seg: 0.9746, decode.acc_seg: 6.6709, aux.loss_seg: 0.3947, aux.acc_seg: 51.8500, loss: 1.3693
2020-10-01 14:33:41,594 - mmseg - INFO - Iter [250/10000]	lr: 1.955e-02, eta: 2:02:50, time: 0.724, data_time: 0.009, memory: 12264, decode.loss_seg: 0.9613, decode.acc_seg: 5.1887, aux.loss_seg: 0.3945, aux.acc_seg: 39.3254, loss: 1.3558
2020-10-01 14:34:16,712 - mmseg - INFO - Iter [300/10000]	lr: 1.946e-02, eta: 2:00:46, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9554, decode.acc_seg: 4.3045, aux.loss_seg: 0.3940, aux.acc_seg: 22.6056, loss: 1.3494
2020-10-01 14:35:40,007 - mmseg - INFO - Iter [350/10000]	lr: 1.937e-02, eta: 2:21:15, time: 1.666, data_time: 0.009, memory: 12264, decode.loss_seg: 0.9501, decode.acc_seg: 4.3709, aux.loss_seg: 0.3933, aux.acc_seg: 14.8957, loss: 1.3434
2020-10-01 14:36:15,244 - mmseg - INFO - Iter [400/10000]	lr: 1.928e-02, eta: 2:17:03, time: 0.705, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9465, decode.acc_seg: 4.0534, aux.loss_seg: 0.3920, aux.acc_seg: 11.0309, loss: 1.3385
2020-10-01 14:36:50,774 - mmseg - INFO - Iter [450/10000]	lr: 1.919e-02, eta: 2:13:45, time: 0.711, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9378, decode.acc_seg: 3.4164, aux.loss_seg: 0.3904, aux.acc_seg: 9.4860, loss: 1.3281
2020-10-01 14:37:25,605 - mmseg - INFO - Iter [500/10000]	lr: 1.910e-02, eta: 2:10:47, time: 0.697, data_time: 0.010, memory: 12264, decode.loss_seg: 0.9265, decode.acc_seg: 2.7866, aux.loss_seg: 0.3887, aux.acc_seg: 8.3206, loss: 1.3152
2020-10-01 14:38:01,412 - mmseg - INFO - Iter [550/10000]	lr: 1.901e-02, eta: 2:08:31, time: 0.716, data_time: 0.009, memory: 12264, decode.loss_seg: 0.9016, decode.acc_seg: 2.8148, aux.loss_seg: 0.3874, aux.acc_seg: 7.3005, loss: 1.2889
2020-10-01 14:38:37,943 - mmseg - INFO - Iter [600/10000]	lr: 1.892e-02, eta: 2:06:43, time: 0.731, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8836, decode.acc_seg: 2.6498, aux.loss_seg: 0.3859, aux.acc_seg: 6.7950, loss: 1.2695
2020-10-01 14:39:13,726 - mmseg - INFO - Iter [650/10000]	lr: 1.883e-02, eta: 2:04:56, time: 0.716, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8732, decode.acc_seg: 2.7678, aux.loss_seg: 0.3846, aux.acc_seg: 6.4266, loss: 1.2578
2020-10-01 14:40:36,429 - mmseg - INFO - Iter [700/10000]	lr: 1.874e-02, eta: 2:13:41, time: 1.654, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8663, decode.acc_seg: 2.5586, aux.loss_seg: 0.3833, aux.acc_seg: 5.8816, loss: 1.2496
2020-10-01 14:41:11,535 - mmseg - INFO - Iter [750/10000]	lr: 1.865e-02, eta: 2:11:20, time: 0.703, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8563, decode.acc_seg: 2.5847, aux.loss_seg: 0.3823, aux.acc_seg: 5.9639, loss: 1.2387
2020-10-01 14:41:47,478 - mmseg - INFO - Iter [800/10000]	lr: 1.856e-02, eta: 2:09:20, time: 0.719, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8585, decode.acc_seg: 3.0290, aux.loss_seg: 0.3816, aux.acc_seg: 5.5320, loss: 1.2401
2020-10-01 14:42:23,166 - mmseg - INFO - Iter [850/10000]	lr: 1.847e-02, eta: 2:07:29, time: 0.714, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8463, decode.acc_seg: 2.8922, aux.loss_seg: 0.3811, aux.acc_seg: 5.4733, loss: 1.2274
2020-10-01 14:42:57,711 - mmseg - INFO - Iter [900/10000]	lr: 1.838e-02, eta: 2:05:33, time: 0.691, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8458, decode.acc_seg: 2.5315, aux.loss_seg: 0.3807, aux.acc_seg: 5.3846, loss: 1.2265
2020-10-01 14:43:32,436 - mmseg - INFO - Iter [950/10000]	lr: 1.829e-02, eta: 2:03:48, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8424, decode.acc_seg: 2.8462, aux.loss_seg: 0.3803, aux.acc_seg: 5.5678, loss: 1.2227
2020-10-01 14:44:54,933 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 14:44:54,936 - mmseg - INFO - Iter [1000/10000]	lr: 1.820e-02, eta: 2:09:20, time: 1.650, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8414, decode.acc_seg: 2.7657, aux.loss_seg: 0.3804, aux.acc_seg: 5.2899, loss: 1.2218
2020-10-01 14:45:29,962 - mmseg - INFO - Iter [1050/10000]	lr: 1.811e-02, eta: 2:07:28, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8387, decode.acc_seg: 2.8232, aux.loss_seg: 0.3796, aux.acc_seg: 5.0726, loss: 1.2183
2020-10-01 14:46:05,495 - mmseg - INFO - Iter [1100/10000]	lr: 1.802e-02, eta: 2:05:47, time: 0.711, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8346, decode.acc_seg: 2.8680, aux.loss_seg: 0.3792, aux.acc_seg: 4.9183, loss: 1.2138
2020-10-01 14:46:40,196 - mmseg - INFO - Iter [1150/10000]	lr: 1.793e-02, eta: 2:04:06, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8347, decode.acc_seg: 2.5065, aux.loss_seg: 0.3792, aux.acc_seg: 5.3092, loss: 1.2139
2020-10-01 14:47:15,199 - mmseg - INFO - Iter [1200/10000]	lr: 1.784e-02, eta: 2:02:32, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8310, decode.acc_seg: 2.7095, aux.loss_seg: 0.3789, aux.acc_seg: 4.7674, loss: 1.2099
2020-10-01 14:47:51,191 - mmseg - INFO - Iter [1250/10000]	lr: 1.775e-02, eta: 2:01:10, time: 0.720, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8360, decode.acc_seg: 3.0158, aux.loss_seg: 0.3790, aux.acc_seg: 4.6995, loss: 1.2150
2020-10-01 14:48:26,911 - mmseg - INFO - Iter [1300/10000]	lr: 1.766e-02, eta: 1:59:49, time: 0.715, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8324, decode.acc_seg: 2.3954, aux.loss_seg: 0.3784, aux.acc_seg: 4.7563, loss: 1.2108
2020-10-01 14:49:50,419 - mmseg - INFO - Iter [1350/10000]	lr: 1.757e-02, eta: 2:03:38, time: 1.670, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8267, decode.acc_seg: 2.8183, aux.loss_seg: 0.3781, aux.acc_seg: 4.7210, loss: 1.2049
2020-10-01 14:50:26,905 - mmseg - INFO - Iter [1400/10000]	lr: 1.748e-02, eta: 2:02:16, time: 0.730, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8279, decode.acc_seg: 2.8728, aux.loss_seg: 0.3782, aux.acc_seg: 4.3993, loss: 1.2062
2020-10-01 14:51:03,026 - mmseg - INFO - Iter [1450/10000]	lr: 1.738e-02, eta: 2:00:55, time: 0.722, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8296, decode.acc_seg: 2.5786, aux.loss_seg: 0.3776, aux.acc_seg: 4.4249, loss: 1.2072
2020-10-01 14:51:38,127 - mmseg - INFO - Iter [1500/10000]	lr: 1.729e-02, eta: 1:59:31, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8281, decode.acc_seg: 3.0981, aux.loss_seg: 0.3775, aux.acc_seg: 4.2223, loss: 1.2056
2020-10-01 14:52:13,069 - mmseg - INFO - Iter [1550/10000]	lr: 1.720e-02, eta: 1:58:09, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8248, decode.acc_seg: 2.7849, aux.loss_seg: 0.3762, aux.acc_seg: 4.3633, loss: 1.2010
2020-10-01 14:52:48,266 - mmseg - INFO - Iter [1600/10000]	lr: 1.711e-02, eta: 1:56:52, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8279, decode.acc_seg: 2.3931, aux.loss_seg: 0.3763, aux.acc_seg: 4.1208, loss: 1.2042
2020-10-01 14:53:22,899 - mmseg - INFO - Iter [1650/10000]	lr: 1.702e-02, eta: 1:55:34, time: 0.693, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8257, decode.acc_seg: 2.7297, aux.loss_seg: 0.3758, aux.acc_seg: 3.8826, loss: 1.2015
2020-10-01 14:54:45,838 - mmseg - INFO - Iter [1700/10000]	lr: 1.693e-02, eta: 1:58:15, time: 1.659, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8267, decode.acc_seg: 2.6651, aux.loss_seg: 0.3753, aux.acc_seg: 3.8226, loss: 1.2020
2020-10-01 14:55:20,437 - mmseg - INFO - Iter [1750/10000]	lr: 1.684e-02, eta: 1:56:54, time: 0.692, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8233, decode.acc_seg: 2.6892, aux.loss_seg: 0.3750, aux.acc_seg: 4.0235, loss: 1.1983
2020-10-01 14:55:55,581 - mmseg - INFO - Iter [1800/10000]	lr: 1.675e-02, eta: 1:55:37, time: 0.703, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8230, decode.acc_seg: 2.9060, aux.loss_seg: 0.3742, aux.acc_seg: 3.6365, loss: 1.1972
2020-10-01 14:56:30,593 - mmseg - INFO - Iter [1850/10000]	lr: 1.666e-02, eta: 1:54:23, time: 0.700, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8250, decode.acc_seg: 2.6074, aux.loss_seg: 0.3739, aux.acc_seg: 3.6188, loss: 1.1989
2020-10-01 14:57:05,847 - mmseg - INFO - Iter [1900/10000]	lr: 1.656e-02, eta: 1:53:12, time: 0.705, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8221, decode.acc_seg: 2.8179, aux.loss_seg: 0.3737, aux.acc_seg: 3.5262, loss: 1.1958
2020-10-01 14:57:40,837 - mmseg - INFO - Iter [1950/10000]	lr: 1.647e-02, eta: 1:52:01, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8246, decode.acc_seg: 2.8267, aux.loss_seg: 0.3739, aux.acc_seg: 3.6130, loss: 1.1985
2020-10-01 14:59:03,135 - mmseg - INFO - Saving checkpoint at 2000 iterations
2020-10-01 14:59:04,411 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 14:59:04,412 - mmseg - INFO - Iter [2000/10000]	lr: 1.638e-02, eta: 1:54:07, time: 1.671, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8203, decode.acc_seg: 2.9338, aux.loss_seg: 0.3723, aux.acc_seg: 3.4501, loss: 1.1926
2020-10-01 14:59:39,326 - mmseg - INFO - Iter [2050/10000]	lr: 1.629e-02, eta: 1:52:53, time: 0.698, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8218, decode.acc_seg: 3.1096, aux.loss_seg: 0.3731, aux.acc_seg: 3.2591, loss: 1.1949
2020-10-01 15:00:15,130 - mmseg - INFO - Iter [2100/10000]	lr: 1.620e-02, eta: 1:51:45, time: 0.716, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8249, decode.acc_seg: 2.7190, aux.loss_seg: 0.3730, aux.acc_seg: 3.4875, loss: 1.1978
2020-10-01 15:00:49,907 - mmseg - INFO - Iter [2150/10000]	lr: 1.611e-02, eta: 1:50:35, time: 0.696, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8209, decode.acc_seg: 2.6571, aux.loss_seg: 0.3725, aux.acc_seg: 3.3819, loss: 1.1935
2020-10-01 15:01:24,750 - mmseg - INFO - Iter [2200/10000]	lr: 1.601e-02, eta: 1:49:26, time: 0.697, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8240, decode.acc_seg: 2.7963, aux.loss_seg: 0.3725, aux.acc_seg: 3.3161, loss: 1.1965
2020-10-01 15:01:59,968 - mmseg - INFO - Iter [2250/10000]	lr: 1.592e-02, eta: 1:48:20, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8197, decode.acc_seg: 2.6124, aux.loss_seg: 0.3722, aux.acc_seg: 3.2793, loss: 1.1919
2020-10-01 15:02:35,704 - mmseg - INFO - Iter [2300/10000]	lr: 1.583e-02, eta: 1:47:18, time: 0.714, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8178, decode.acc_seg: 2.8654, aux.loss_seg: 0.3715, aux.acc_seg: 3.3563, loss: 1.1893
2020-10-01 15:04:01,111 - mmseg - INFO - Iter [2350/10000]	lr: 1.574e-02, eta: 1:48:58, time: 1.708, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8165, decode.acc_seg: 2.6659, aux.loss_seg: 0.3714, aux.acc_seg: 3.3122, loss: 1.1879
2020-10-01 15:04:36,101 - mmseg - INFO - Iter [2400/10000]	lr: 1.565e-02, eta: 1:47:51, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8195, decode.acc_seg: 2.8733, aux.loss_seg: 0.3719, aux.acc_seg: 3.2521, loss: 1.1914
2020-10-01 15:05:10,795 - mmseg - INFO - Iter [2450/10000]	lr: 1.555e-02, eta: 1:46:44, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8205, decode.acc_seg: 3.0658, aux.loss_seg: 0.3717, aux.acc_seg: 3.1511, loss: 1.1922
2020-10-01 15:05:45,038 - mmseg - INFO - Iter [2500/10000]	lr: 1.546e-02, eta: 1:45:37, time: 0.685, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8235, decode.acc_seg: 2.8393, aux.loss_seg: 0.3719, aux.acc_seg: 3.2638, loss: 1.1954
2020-10-01 15:06:20,177 - mmseg - INFO - Iter [2550/10000]	lr: 1.537e-02, eta: 1:44:34, time: 0.703, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8148, decode.acc_seg: 3.0482, aux.loss_seg: 0.3709, aux.acc_seg: 3.3820, loss: 1.1857
2020-10-01 15:06:54,659 - mmseg - INFO - Iter [2600/10000]	lr: 1.528e-02, eta: 1:43:30, time: 0.690, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8162, decode.acc_seg: 2.8971, aux.loss_seg: 0.3711, aux.acc_seg: 3.3801, loss: 1.1873
2020-10-01 15:08:18,155 - mmseg - INFO - Iter [2650/10000]	lr: 1.519e-02, eta: 1:44:43, time: 1.670, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8231, decode.acc_seg: 2.7074, aux.loss_seg: 0.3709, aux.acc_seg: 3.2359, loss: 1.1940
2020-10-01 15:08:53,049 - mmseg - INFO - Iter [2700/10000]	lr: 1.509e-02, eta: 1:43:39, time: 0.698, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8188, decode.acc_seg: 2.9660, aux.loss_seg: 0.3708, aux.acc_seg: 3.3553, loss: 1.1896
2020-10-01 15:09:28,396 - mmseg - INFO - Iter [2750/10000]	lr: 1.500e-02, eta: 1:42:37, time: 0.707, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8165, decode.acc_seg: 2.7388, aux.loss_seg: 0.3698, aux.acc_seg: 3.0256, loss: 1.1862
2020-10-01 15:10:03,565 - mmseg - INFO - Iter [2800/10000]	lr: 1.491e-02, eta: 1:41:36, time: 0.703, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8214, decode.acc_seg: 2.9940, aux.loss_seg: 0.3698, aux.acc_seg: 2.9945, loss: 1.1913
2020-10-01 15:10:38,849 - mmseg - INFO - Iter [2850/10000]	lr: 1.482e-02, eta: 1:40:36, time: 0.706, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8167, decode.acc_seg: 3.1055, aux.loss_seg: 0.3691, aux.acc_seg: 2.9002, loss: 1.1858
2020-10-01 15:11:14,670 - mmseg - INFO - Iter [2900/10000]	lr: 1.472e-02, eta: 1:39:38, time: 0.716, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8143, decode.acc_seg: 2.8035, aux.loss_seg: 0.3674, aux.acc_seg: 2.7527, loss: 1.1817
2020-10-01 15:11:50,021 - mmseg - INFO - Iter [2950/10000]	lr: 1.463e-02, eta: 1:38:40, time: 0.707, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8112, decode.acc_seg: 2.8177, aux.loss_seg: 0.3653, aux.acc_seg: 2.0948, loss: 1.1765
2020-10-01 15:13:12,699 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 15:13:12,703 - mmseg - INFO - Iter [3000/10000]	lr: 1.454e-02, eta: 1:39:33, time: 1.653, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8155, decode.acc_seg: 2.7014, aux.loss_seg: 0.3633, aux.acc_seg: 2.2577, loss: 1.1788
2020-10-01 15:13:47,578 - mmseg - INFO - Iter [3050/10000]	lr: 1.444e-02, eta: 1:38:33, time: 0.698, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8165, decode.acc_seg: 3.1057, aux.loss_seg: 0.3616, aux.acc_seg: 1.9784, loss: 1.1781
2020-10-01 15:14:22,487 - mmseg - INFO - Iter [3100/10000]	lr: 1.435e-02, eta: 1:37:33, time: 0.698, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8149, decode.acc_seg: 2.8019, aux.loss_seg: 0.3606, aux.acc_seg: 2.1277, loss: 1.1755
2020-10-01 15:14:57,831 - mmseg - INFO - Iter [3150/10000]	lr: 1.426e-02, eta: 1:36:35, time: 0.707, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8119, decode.acc_seg: 2.5855, aux.loss_seg: 0.3596, aux.acc_seg: 2.2623, loss: 1.1715
2020-10-01 15:15:32,399 - mmseg - INFO - Iter [3200/10000]	lr: 1.417e-02, eta: 1:35:37, time: 0.691, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8160, decode.acc_seg: 3.2949, aux.loss_seg: 0.3580, aux.acc_seg: 1.8500, loss: 1.1739
2020-10-01 15:16:08,048 - mmseg - INFO - Iter [3250/10000]	lr: 1.407e-02, eta: 1:34:41, time: 0.713, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8172, decode.acc_seg: 3.0774, aux.loss_seg: 0.3572, aux.acc_seg: 2.0190, loss: 1.1744
2020-10-01 15:16:42,893 - mmseg - INFO - Iter [3300/10000]	lr: 1.398e-02, eta: 1:33:44, time: 0.697, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8125, decode.acc_seg: 2.7345, aux.loss_seg: 0.3560, aux.acc_seg: 1.8329, loss: 1.1686
2020-10-01 15:18:05,360 - mmseg - INFO - Iter [3350/10000]	lr: 1.389e-02, eta: 1:34:22, time: 1.649, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8131, decode.acc_seg: 2.6883, aux.loss_seg: 0.3550, aux.acc_seg: 2.2382, loss: 1.1681
2020-10-01 15:18:40,602 - mmseg - INFO - Iter [3400/10000]	lr: 1.379e-02, eta: 1:33:26, time: 0.705, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8153, decode.acc_seg: 2.5909, aux.loss_seg: 0.3550, aux.acc_seg: 2.1857, loss: 1.1703
2020-10-01 15:19:15,441 - mmseg - INFO - Iter [3450/10000]	lr: 1.370e-02, eta: 1:32:29, time: 0.697, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8092, decode.acc_seg: 3.2905, aux.loss_seg: 0.3529, aux.acc_seg: 2.0670, loss: 1.1620
2020-10-01 15:19:50,447 - mmseg - INFO - Iter [3500/10000]	lr: 1.361e-02, eta: 1:31:33, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8121, decode.acc_seg: 3.0362, aux.loss_seg: 0.3520, aux.acc_seg: 2.1118, loss: 1.1641
2020-10-01 15:20:25,426 - mmseg - INFO - Iter [3550/10000]	lr: 1.351e-02, eta: 1:30:37, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8167, decode.acc_seg: 2.9337, aux.loss_seg: 0.3519, aux.acc_seg: 1.8300, loss: 1.1686
2020-10-01 15:21:01,859 - mmseg - INFO - Iter [3600/10000]	lr: 1.342e-02, eta: 1:29:45, time: 0.729, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8100, decode.acc_seg: 2.7496, aux.loss_seg: 0.3495, aux.acc_seg: 2.0466, loss: 1.1596
2020-10-01 15:22:25,633 - mmseg - INFO - Iter [3650/10000]	lr: 1.333e-02, eta: 1:30:15, time: 1.676, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8120, decode.acc_seg: 2.7904, aux.loss_seg: 0.3496, aux.acc_seg: 2.3685, loss: 1.1616
2020-10-01 15:23:01,177 - mmseg - INFO - Iter [3700/10000]	lr: 1.323e-02, eta: 1:29:21, time: 0.711, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8106, decode.acc_seg: 2.7577, aux.loss_seg: 0.3489, aux.acc_seg: 2.1570, loss: 1.1595
2020-10-01 15:23:36,248 - mmseg - INFO - Iter [3750/10000]	lr: 1.314e-02, eta: 1:28:26, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8144, decode.acc_seg: 2.6134, aux.loss_seg: 0.3492, aux.acc_seg: 2.1970, loss: 1.1636
2020-10-01 15:24:11,449 - mmseg - INFO - Iter [3800/10000]	lr: 1.304e-02, eta: 1:27:31, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8159, decode.acc_seg: 3.1410, aux.loss_seg: 0.3483, aux.acc_seg: 2.1552, loss: 1.1642
2020-10-01 15:24:46,020 - mmseg - INFO - Iter [3850/10000]	lr: 1.295e-02, eta: 1:26:36, time: 0.691, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8152, decode.acc_seg: 2.9379, aux.loss_seg: 0.3481, aux.acc_seg: 2.3908, loss: 1.1633
2020-10-01 15:25:21,073 - mmseg - INFO - Iter [3900/10000]	lr: 1.286e-02, eta: 1:25:43, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8105, decode.acc_seg: 2.6619, aux.loss_seg: 0.3463, aux.acc_seg: 2.2719, loss: 1.1568
2020-10-01 15:25:56,036 - mmseg - INFO - Iter [3950/10000]	lr: 1.276e-02, eta: 1:24:50, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8085, decode.acc_seg: 3.2351, aux.loss_seg: 0.3449, aux.acc_seg: 2.1319, loss: 1.1534
2020-10-01 15:27:19,940 - mmseg - INFO - Saving checkpoint at 4000 iterations
2020-10-01 15:27:21,897 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 15:27:21,898 - mmseg - INFO - Iter [4000/10000]	lr: 1.267e-02, eta: 1:25:13, time: 1.717, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8116, decode.acc_seg: 2.6343, aux.loss_seg: 0.3460, aux.acc_seg: 2.2983, loss: 1.1576
2020-10-01 15:27:57,472 - mmseg - INFO - Iter [4050/10000]	lr: 1.257e-02, eta: 1:24:20, time: 0.711, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8079, decode.acc_seg: 2.8500, aux.loss_seg: 0.3449, aux.acc_seg: 2.4148, loss: 1.1528
2020-10-01 15:28:32,219 - mmseg - INFO - Iter [4100/10000]	lr: 1.248e-02, eta: 1:23:27, time: 0.695, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8119, decode.acc_seg: 2.7866, aux.loss_seg: 0.3458, aux.acc_seg: 2.3150, loss: 1.1577
2020-10-01 15:29:07,420 - mmseg - INFO - Iter [4150/10000]	lr: 1.238e-02, eta: 1:22:34, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8115, decode.acc_seg: 3.1940, aux.loss_seg: 0.3450, aux.acc_seg: 1.9139, loss: 1.1565
2020-10-01 15:29:42,615 - mmseg - INFO - Iter [4200/10000]	lr: 1.229e-02, eta: 1:21:42, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8124, decode.acc_seg: 2.8669, aux.loss_seg: 0.3454, aux.acc_seg: 2.1888, loss: 1.1578
2020-10-01 15:30:17,627 - mmseg - INFO - Iter [4250/10000]	lr: 1.220e-02, eta: 1:20:50, time: 0.700, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8111, decode.acc_seg: 3.0356, aux.loss_seg: 0.3448, aux.acc_seg: 2.3430, loss: 1.1559
2020-10-01 15:31:40,340 - mmseg - INFO - Iter [4300/10000]	lr: 1.210e-02, eta: 1:21:01, time: 1.655, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8085, decode.acc_seg: 2.9533, aux.loss_seg: 0.3438, aux.acc_seg: 2.4085, loss: 1.1523
2020-10-01 15:32:15,338 - mmseg - INFO - Iter [4350/10000]	lr: 1.201e-02, eta: 1:20:09, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8128, decode.acc_seg: 2.7397, aux.loss_seg: 0.3449, aux.acc_seg: 2.4604, loss: 1.1576
2020-10-01 15:32:50,097 - mmseg - INFO - Iter [4400/10000]	lr: 1.191e-02, eta: 1:19:16, time: 0.695, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8065, decode.acc_seg: 3.2314, aux.loss_seg: 0.3433, aux.acc_seg: 2.1570, loss: 1.1499
2020-10-01 15:33:25,206 - mmseg - INFO - Iter [4450/10000]	lr: 1.182e-02, eta: 1:18:25, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8102, decode.acc_seg: 3.0311, aux.loss_seg: 0.3434, aux.acc_seg: 2.2431, loss: 1.1536
2020-10-01 15:33:59,965 - mmseg - INFO - Iter [4500/10000]	lr: 1.172e-02, eta: 1:17:33, time: 0.695, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8062, decode.acc_seg: 2.8003, aux.loss_seg: 0.3427, aux.acc_seg: 2.2607, loss: 1.1489
2020-10-01 15:34:34,894 - mmseg - INFO - Iter [4550/10000]	lr: 1.163e-02, eta: 1:16:42, time: 0.699, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8076, decode.acc_seg: 3.3094, aux.loss_seg: 0.3424, aux.acc_seg: 2.1958, loss: 1.1501
2020-10-01 15:35:09,953 - mmseg - INFO - Iter [4600/10000]	lr: 1.153e-02, eta: 1:15:51, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8079, decode.acc_seg: 2.8459, aux.loss_seg: 0.3428, aux.acc_seg: 2.5012, loss: 1.1507
2020-10-01 15:36:33,363 - mmseg - INFO - Iter [4650/10000]	lr: 1.144e-02, eta: 1:15:56, time: 1.668, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8084, decode.acc_seg: 2.7605, aux.loss_seg: 0.3426, aux.acc_seg: 2.2565, loss: 1.1510
2020-10-01 15:37:08,542 - mmseg - INFO - Iter [4700/10000]	lr: 1.134e-02, eta: 1:15:06, time: 0.703, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8093, decode.acc_seg: 3.2562, aux.loss_seg: 0.3428, aux.acc_seg: 2.3285, loss: 1.1522
2020-10-01 15:37:43,512 - mmseg - INFO - Iter [4750/10000]	lr: 1.124e-02, eta: 1:14:15, time: 0.700, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8087, decode.acc_seg: 2.7467, aux.loss_seg: 0.3425, aux.acc_seg: 2.4056, loss: 1.1513
2020-10-01 15:38:18,130 - mmseg - INFO - Iter [4800/10000]	lr: 1.115e-02, eta: 1:13:24, time: 0.692, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8078, decode.acc_seg: 2.7612, aux.loss_seg: 0.3419, aux.acc_seg: 2.2134, loss: 1.1497
2020-10-01 15:38:52,794 - mmseg - INFO - Iter [4850/10000]	lr: 1.105e-02, eta: 1:12:33, time: 0.693, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8116, decode.acc_seg: 3.1941, aux.loss_seg: 0.3432, aux.acc_seg: 2.0774, loss: 1.1547
2020-10-01 15:39:27,823 - mmseg - INFO - Iter [4900/10000]	lr: 1.096e-02, eta: 1:11:43, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8059, decode.acc_seg: 3.1753, aux.loss_seg: 0.3415, aux.acc_seg: 2.2397, loss: 1.1474
2020-10-01 15:40:02,523 - mmseg - INFO - Iter [4950/10000]	lr: 1.086e-02, eta: 1:10:54, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8076, decode.acc_seg: 2.8235, aux.loss_seg: 0.3420, aux.acc_seg: 2.4323, loss: 1.1495
2020-10-01 15:41:25,034 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 15:41:25,035 - mmseg - INFO - Iter [5000/10000]	lr: 1.077e-02, eta: 1:10:52, time: 1.650, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8068, decode.acc_seg: 2.8956, aux.loss_seg: 0.3418, aux.acc_seg: 2.1896, loss: 1.1485
2020-10-01 15:42:00,577 - mmseg - INFO - Iter [5050/10000]	lr: 1.067e-02, eta: 1:10:03, time: 0.711, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8045, decode.acc_seg: 2.9109, aux.loss_seg: 0.3412, aux.acc_seg: 2.1875, loss: 1.1456
2020-10-01 15:42:37,054 - mmseg - INFO - Iter [5100/10000]	lr: 1.057e-02, eta: 1:09:14, time: 0.730, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8097, decode.acc_seg: 2.9037, aux.loss_seg: 0.3421, aux.acc_seg: 2.2737, loss: 1.1518
2020-10-01 15:43:12,254 - mmseg - INFO - Iter [5150/10000]	lr: 1.048e-02, eta: 1:08:25, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8077, decode.acc_seg: 3.1226, aux.loss_seg: 0.3418, aux.acc_seg: 2.5018, loss: 1.1496
2020-10-01 15:43:47,076 - mmseg - INFO - Iter [5200/10000]	lr: 1.038e-02, eta: 1:07:36, time: 0.696, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8074, decode.acc_seg: 2.7864, aux.loss_seg: 0.3416, aux.acc_seg: 2.5923, loss: 1.1491
2020-10-01 15:44:21,945 - mmseg - INFO - Iter [5250/10000]	lr: 1.028e-02, eta: 1:06:47, time: 0.697, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8026, decode.acc_seg: 3.0752, aux.loss_seg: 0.3406, aux.acc_seg: 2.3046, loss: 1.1432
2020-10-01 15:45:44,973 - mmseg - INFO - Iter [5300/10000]	lr: 1.019e-02, eta: 1:06:41, time: 1.661, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8090, decode.acc_seg: 3.0640, aux.loss_seg: 0.3412, aux.acc_seg: 2.2445, loss: 1.1502
2020-10-01 15:46:20,251 - mmseg - INFO - Iter [5350/10000]	lr: 1.009e-02, eta: 1:05:52, time: 0.706, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8074, decode.acc_seg: 2.9240, aux.loss_seg: 0.3411, aux.acc_seg: 2.1672, loss: 1.1485
2020-10-01 15:46:55,497 - mmseg - INFO - Iter [5400/10000]	lr: 9.995e-03, eta: 1:05:03, time: 0.705, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8041, decode.acc_seg: 2.8120, aux.loss_seg: 0.3407, aux.acc_seg: 2.3382, loss: 1.1448
2020-10-01 15:47:29,932 - mmseg - INFO - Iter [5450/10000]	lr: 9.898e-03, eta: 1:04:14, time: 0.689, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8070, decode.acc_seg: 2.7792, aux.loss_seg: 0.3409, aux.acc_seg: 2.3500, loss: 1.1479
2020-10-01 15:48:04,626 - mmseg - INFO - Iter [5500/10000]	lr: 9.801e-03, eta: 1:03:26, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8054, decode.acc_seg: 2.9684, aux.loss_seg: 0.3402, aux.acc_seg: 2.3068, loss: 1.1456
2020-10-01 15:48:39,698 - mmseg - INFO - Iter [5550/10000]	lr: 9.704e-03, eta: 1:02:38, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8099, decode.acc_seg: 3.2832, aux.loss_seg: 0.3418, aux.acc_seg: 2.4901, loss: 1.1516
2020-10-01 15:49:15,146 - mmseg - INFO - Iter [5600/10000]	lr: 9.607e-03, eta: 1:01:50, time: 0.709, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8021, decode.acc_seg: 3.0176, aux.loss_seg: 0.3392, aux.acc_seg: 2.2848, loss: 1.1413
2020-10-01 15:50:38,152 - mmseg - INFO - Iter [5650/10000]	lr: 9.510e-03, eta: 1:01:39, time: 1.660, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8046, decode.acc_seg: 3.0071, aux.loss_seg: 0.3403, aux.acc_seg: 2.4159, loss: 1.1450
2020-10-01 15:51:12,925 - mmseg - INFO - Iter [5700/10000]	lr: 9.412e-03, eta: 1:00:51, time: 0.696, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8070, decode.acc_seg: 2.8236, aux.loss_seg: 0.3406, aux.acc_seg: 2.5000, loss: 1.1476
2020-10-01 15:51:47,462 - mmseg - INFO - Iter [5750/10000]	lr: 9.315e-03, eta: 1:00:03, time: 0.691, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8051, decode.acc_seg: 2.9803, aux.loss_seg: 0.3402, aux.acc_seg: 2.4766, loss: 1.1453
2020-10-01 15:52:22,249 - mmseg - INFO - Iter [5800/10000]	lr: 9.217e-03, eta: 0:59:15, time: 0.696, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8042, decode.acc_seg: 3.0429, aux.loss_seg: 0.3397, aux.acc_seg: 2.3418, loss: 1.1439
2020-10-01 15:52:57,243 - mmseg - INFO - Iter [5850/10000]	lr: 9.120e-03, eta: 0:58:27, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8038, decode.acc_seg: 2.9602, aux.loss_seg: 0.3396, aux.acc_seg: 2.1853, loss: 1.1434
2020-10-01 15:53:31,948 - mmseg - INFO - Iter [5900/10000]	lr: 9.022e-03, eta: 0:57:40, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8068, decode.acc_seg: 2.9554, aux.loss_seg: 0.3400, aux.acc_seg: 2.0707, loss: 1.1468
2020-10-01 15:54:53,961 - mmseg - INFO - Iter [5950/10000]	lr: 8.924e-03, eta: 0:57:25, time: 1.640, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8033, decode.acc_seg: 2.7619, aux.loss_seg: 0.3399, aux.acc_seg: 2.3927, loss: 1.1432
2020-10-01 15:55:29,053 - mmseg - INFO - Saving checkpoint at 6000 iterations
2020-10-01 15:55:29,792 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 15:55:29,793 - mmseg - INFO - Iter [6000/10000]	lr: 8.826e-03, eta: 0:56:38, time: 0.717, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8032, decode.acc_seg: 3.0283, aux.loss_seg: 0.3394, aux.acc_seg: 2.4120, loss: 1.1426
2020-10-01 15:56:04,609 - mmseg - INFO - Iter [6050/10000]	lr: 8.728e-03, eta: 0:55:50, time: 0.696, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8043, decode.acc_seg: 3.4269, aux.loss_seg: 0.3395, aux.acc_seg: 2.2018, loss: 1.1438
2020-10-01 15:56:39,540 - mmseg - INFO - Iter [6100/10000]	lr: 8.629e-03, eta: 0:55:03, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7996, decode.acc_seg: 2.4914, aux.loss_seg: 0.3386, aux.acc_seg: 2.5597, loss: 1.1382
2020-10-01 15:57:14,315 - mmseg - INFO - Iter [6150/10000]	lr: 8.531e-03, eta: 0:54:16, time: 0.696, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8030, decode.acc_seg: 2.7759, aux.loss_seg: 0.3394, aux.acc_seg: 2.2754, loss: 1.1424
2020-10-01 15:57:49,185 - mmseg - INFO - Iter [6200/10000]	lr: 8.432e-03, eta: 0:53:29, time: 0.697, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8035, decode.acc_seg: 3.0768, aux.loss_seg: 0.3392, aux.acc_seg: 2.2970, loss: 1.1427
2020-10-01 15:58:24,443 - mmseg - INFO - Iter [6250/10000]	lr: 8.334e-03, eta: 0:52:43, time: 0.705, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8027, decode.acc_seg: 3.1305, aux.loss_seg: 0.3393, aux.acc_seg: 2.2661, loss: 1.1420
2020-10-01 15:59:46,821 - mmseg - INFO - Iter [6300/10000]	lr: 8.235e-03, eta: 0:52:24, time: 1.647, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7999, decode.acc_seg: 2.8771, aux.loss_seg: 0.3386, aux.acc_seg: 2.4158, loss: 1.1385
2020-10-01 16:00:21,902 - mmseg - INFO - Iter [6350/10000]	lr: 8.136e-03, eta: 0:51:37, time: 0.701, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8024, decode.acc_seg: 3.0491, aux.loss_seg: 0.3382, aux.acc_seg: 2.2017, loss: 1.1406
2020-10-01 16:00:56,456 - mmseg - INFO - Iter [6400/10000]	lr: 8.037e-03, eta: 0:50:50, time: 0.691, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8004, decode.acc_seg: 2.8264, aux.loss_seg: 0.3382, aux.acc_seg: 2.4062, loss: 1.1385
2020-10-01 16:01:31,216 - mmseg - INFO - Iter [6450/10000]	lr: 7.937e-03, eta: 0:50:04, time: 0.695, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8030, decode.acc_seg: 2.7833, aux.loss_seg: 0.3387, aux.acc_seg: 2.3724, loss: 1.1417
2020-10-01 16:02:05,910 - mmseg - INFO - Iter [6500/10000]	lr: 7.838e-03, eta: 0:49:17, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8046, decode.acc_seg: 3.0965, aux.loss_seg: 0.3394, aux.acc_seg: 2.4245, loss: 1.1440
2020-10-01 16:02:41,107 - mmseg - INFO - Iter [6550/10000]	lr: 7.738e-03, eta: 0:48:31, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7995, decode.acc_seg: 2.8470, aux.loss_seg: 0.3379, aux.acc_seg: 2.4506, loss: 1.1374
2020-10-01 16:03:16,306 - mmseg - INFO - Iter [6600/10000]	lr: 7.639e-03, eta: 0:47:46, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8040, decode.acc_seg: 3.1693, aux.loss_seg: 0.3390, aux.acc_seg: 2.3550, loss: 1.1431
2020-10-01 16:04:41,332 - mmseg - INFO - Iter [6650/10000]	lr: 7.539e-03, eta: 0:47:25, time: 1.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8041, decode.acc_seg: 2.8423, aux.loss_seg: 0.3388, aux.acc_seg: 2.2224, loss: 1.1429
2020-10-01 16:05:16,070 - mmseg - INFO - Iter [6700/10000]	lr: 7.439e-03, eta: 0:46:39, time: 0.695, data_time: 0.011, memory: 12264, decode.loss_seg: 0.8031, decode.acc_seg: 2.8462, aux.loss_seg: 0.3386, aux.acc_seg: 2.5369, loss: 1.1418
2020-10-01 16:05:50,718 - mmseg - INFO - Iter [6750/10000]	lr: 7.339e-03, eta: 0:45:53, time: 0.693, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7983, decode.acc_seg: 2.9530, aux.loss_seg: 0.3377, aux.acc_seg: 2.2428, loss: 1.1360
2020-10-01 16:06:25,349 - mmseg - INFO - Iter [6800/10000]	lr: 7.239e-03, eta: 0:45:07, time: 0.693, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8014, decode.acc_seg: 3.1210, aux.loss_seg: 0.3384, aux.acc_seg: 2.3711, loss: 1.1398
2020-10-01 16:07:00,354 - mmseg - INFO - Iter [6850/10000]	lr: 7.138e-03, eta: 0:44:21, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8006, decode.acc_seg: 2.9730, aux.loss_seg: 0.3379, aux.acc_seg: 2.4153, loss: 1.1385
2020-10-01 16:07:35,647 - mmseg - INFO - Iter [6900/10000]	lr: 7.038e-03, eta: 0:43:36, time: 0.706, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7992, decode.acc_seg: 2.8987, aux.loss_seg: 0.3372, aux.acc_seg: 2.2647, loss: 1.1364
2020-10-01 16:08:58,319 - mmseg - INFO - Iter [6950/10000]	lr: 6.937e-03, eta: 0:43:11, time: 1.653, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8031, decode.acc_seg: 3.0766, aux.loss_seg: 0.3382, aux.acc_seg: 2.4884, loss: 1.1413
2020-10-01 16:09:34,082 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 16:09:34,084 - mmseg - INFO - Iter [7000/10000]	lr: 6.836e-03, eta: 0:42:26, time: 0.716, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8001, decode.acc_seg: 3.0197, aux.loss_seg: 0.3374, aux.acc_seg: 2.3413, loss: 1.1375
2020-10-01 16:10:09,578 - mmseg - INFO - Iter [7050/10000]	lr: 6.735e-03, eta: 0:41:40, time: 0.710, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7957, decode.acc_seg: 3.0698, aux.loss_seg: 0.3366, aux.acc_seg: 2.3809, loss: 1.1322
2020-10-01 16:10:44,501 - mmseg - INFO - Iter [7100/10000]	lr: 6.634e-03, eta: 0:40:55, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8026, decode.acc_seg: 2.6843, aux.loss_seg: 0.3387, aux.acc_seg: 2.4033, loss: 1.1413
2020-10-01 16:11:19,248 - mmseg - INFO - Iter [7150/10000]	lr: 6.532e-03, eta: 0:40:10, time: 0.695, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8006, decode.acc_seg: 3.0592, aux.loss_seg: 0.3377, aux.acc_seg: 2.4069, loss: 1.1383
2020-10-01 16:11:54,138 - mmseg - INFO - Iter [7200/10000]	lr: 6.430e-03, eta: 0:39:25, time: 0.698, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7982, decode.acc_seg: 2.9616, aux.loss_seg: 0.3370, aux.acc_seg: 2.1946, loss: 1.1352
2020-10-01 16:12:30,504 - mmseg - INFO - Iter [7250/10000]	lr: 6.329e-03, eta: 0:38:40, time: 0.727, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8004, decode.acc_seg: 3.2339, aux.loss_seg: 0.3372, aux.acc_seg: 2.4842, loss: 1.1375
2020-10-01 16:13:53,198 - mmseg - INFO - Iter [7300/10000]	lr: 6.227e-03, eta: 0:38:13, time: 1.654, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8007, decode.acc_seg: 3.1859, aux.loss_seg: 0.3377, aux.acc_seg: 2.4861, loss: 1.1385
2020-10-01 16:14:28,236 - mmseg - INFO - Iter [7350/10000]	lr: 6.125e-03, eta: 0:37:28, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7969, decode.acc_seg: 2.7596, aux.loss_seg: 0.3368, aux.acc_seg: 2.3193, loss: 1.1337
2020-10-01 16:15:03,545 - mmseg - INFO - Iter [7400/10000]	lr: 6.022e-03, eta: 0:36:43, time: 0.706, data_time: 0.009, memory: 12264, decode.loss_seg: 0.8001, decode.acc_seg: 2.6772, aux.loss_seg: 0.3377, aux.acc_seg: 2.2759, loss: 1.1378
2020-10-01 16:15:38,234 - mmseg - INFO - Iter [7450/10000]	lr: 5.920e-03, eta: 0:35:58, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7985, decode.acc_seg: 2.9418, aux.loss_seg: 0.3366, aux.acc_seg: 2.3368, loss: 1.1352
2020-10-01 16:16:13,040 - mmseg - INFO - Iter [7500/10000]	lr: 5.817e-03, eta: 0:35:13, time: 0.696, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7959, decode.acc_seg: 2.9577, aux.loss_seg: 0.3359, aux.acc_seg: 2.2613, loss: 1.1318
2020-10-01 16:16:48,144 - mmseg - INFO - Iter [7550/10000]	lr: 5.714e-03, eta: 0:34:28, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8028, decode.acc_seg: 3.1731, aux.loss_seg: 0.3381, aux.acc_seg: 2.5395, loss: 1.1409
2020-10-01 16:18:10,670 - mmseg - INFO - Iter [7600/10000]	lr: 5.611e-03, eta: 0:33:59, time: 1.650, data_time: 0.010, memory: 12264, decode.loss_seg: 0.8012, decode.acc_seg: 2.9597, aux.loss_seg: 0.3375, aux.acc_seg: 2.4432, loss: 1.1388
2020-10-01 16:18:45,990 - mmseg - INFO - Iter [7650/10000]	lr: 5.507e-03, eta: 0:33:14, time: 0.706, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7978, decode.acc_seg: 2.9545, aux.loss_seg: 0.3365, aux.acc_seg: 2.2466, loss: 1.1342
2020-10-01 16:19:20,971 - mmseg - INFO - Iter [7700/10000]	lr: 5.404e-03, eta: 0:32:30, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7945, decode.acc_seg: 3.0387, aux.loss_seg: 0.3360, aux.acc_seg: 2.6504, loss: 1.1305
2020-10-01 16:19:56,093 - mmseg - INFO - Iter [7750/10000]	lr: 5.300e-03, eta: 0:31:45, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7991, decode.acc_seg: 2.8387, aux.loss_seg: 0.3372, aux.acc_seg: 2.4166, loss: 1.1362
2020-10-01 16:20:30,844 - mmseg - INFO - Iter [7800/10000]	lr: 5.196e-03, eta: 0:31:01, time: 0.695, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7959, decode.acc_seg: 2.9802, aux.loss_seg: 0.3361, aux.acc_seg: 2.3716, loss: 1.1320
2020-10-01 16:21:06,635 - mmseg - INFO - Iter [7850/10000]	lr: 5.091e-03, eta: 0:30:16, time: 0.716, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7987, decode.acc_seg: 2.9218, aux.loss_seg: 0.3366, aux.acc_seg: 2.4490, loss: 1.1353
2020-10-01 16:21:41,639 - mmseg - INFO - Iter [7900/10000]	lr: 4.987e-03, eta: 0:29:32, time: 0.700, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7962, decode.acc_seg: 3.2474, aux.loss_seg: 0.3365, aux.acc_seg: 2.1867, loss: 1.1327
2020-10-01 16:23:05,221 - mmseg - INFO - Iter [7950/10000]	lr: 4.882e-03, eta: 0:29:01, time: 1.672, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7910, decode.acc_seg: 2.9702, aux.loss_seg: 0.3342, aux.acc_seg: 2.3245, loss: 1.1252
2020-10-01 16:23:39,875 - mmseg - INFO - Saving checkpoint at 8000 iterations
2020-10-01 16:23:42,079 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 16:23:42,079 - mmseg - INFO - Iter [8000/10000]	lr: 4.777e-03, eta: 0:28:17, time: 0.737, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7964, decode.acc_seg: 2.7014, aux.loss_seg: 0.3364, aux.acc_seg: 2.4327, loss: 1.1328
2020-10-01 16:24:17,683 - mmseg - INFO - Iter [8050/10000]	lr: 4.672e-03, eta: 0:27:33, time: 0.711, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7975, decode.acc_seg: 2.7764, aux.loss_seg: 0.3365, aux.acc_seg: 2.3178, loss: 1.1340
2020-10-01 16:24:54,190 - mmseg - INFO - Iter [8100/10000]	lr: 4.566e-03, eta: 0:26:49, time: 0.731, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7953, decode.acc_seg: 2.9567, aux.loss_seg: 0.3362, aux.acc_seg: 2.4753, loss: 1.1315
2020-10-01 16:25:29,366 - mmseg - INFO - Iter [8150/10000]	lr: 4.460e-03, eta: 0:26:05, time: 0.703, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7992, decode.acc_seg: 2.8650, aux.loss_seg: 0.3371, aux.acc_seg: 2.3573, loss: 1.1363
2020-10-01 16:26:04,442 - mmseg - INFO - Iter [8200/10000]	lr: 4.354e-03, eta: 0:25:21, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7964, decode.acc_seg: 3.3702, aux.loss_seg: 0.3357, aux.acc_seg: 2.2960, loss: 1.1321
2020-10-01 16:26:39,088 - mmseg - INFO - Iter [8250/10000]	lr: 4.248e-03, eta: 0:24:37, time: 0.693, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7955, decode.acc_seg: 3.1010, aux.loss_seg: 0.3353, aux.acc_seg: 2.5444, loss: 1.1308
2020-10-01 16:28:02,288 - mmseg - INFO - Iter [8300/10000]	lr: 4.141e-03, eta: 0:24:03, time: 1.664, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7954, decode.acc_seg: 2.9080, aux.loss_seg: 0.3355, aux.acc_seg: 2.3407, loss: 1.1310
2020-10-01 16:28:37,236 - mmseg - INFO - Iter [8350/10000]	lr: 4.034e-03, eta: 0:23:19, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7946, decode.acc_seg: 3.3126, aux.loss_seg: 0.3352, aux.acc_seg: 2.2451, loss: 1.1298
2020-10-01 16:29:12,329 - mmseg - INFO - Iter [8400/10000]	lr: 3.927e-03, eta: 0:22:36, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7931, decode.acc_seg: 2.7940, aux.loss_seg: 0.3349, aux.acc_seg: 2.5513, loss: 1.1280
2020-10-01 16:29:46,909 - mmseg - INFO - Iter [8450/10000]	lr: 3.819e-03, eta: 0:21:52, time: 0.692, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7941, decode.acc_seg: 3.0126, aux.loss_seg: 0.3354, aux.acc_seg: 2.3401, loss: 1.1295
2020-10-01 16:30:23,532 - mmseg - INFO - Iter [8500/10000]	lr: 3.711e-03, eta: 0:21:08, time: 0.733, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7930, decode.acc_seg: 3.0897, aux.loss_seg: 0.3343, aux.acc_seg: 2.5092, loss: 1.1273
2020-10-01 16:30:58,194 - mmseg - INFO - Iter [8550/10000]	lr: 3.602e-03, eta: 0:20:25, time: 0.693, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7952, decode.acc_seg: 2.5707, aux.loss_seg: 0.3364, aux.acc_seg: 2.4026, loss: 1.1316
2020-10-01 16:32:20,243 - mmseg - INFO - Iter [8600/10000]	lr: 3.493e-03, eta: 0:19:49, time: 1.641, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7937, decode.acc_seg: 3.1531, aux.loss_seg: 0.3346, aux.acc_seg: 2.5573, loss: 1.1284
2020-10-01 16:32:55,155 - mmseg - INFO - Iter [8650/10000]	lr: 3.384e-03, eta: 0:19:05, time: 0.698, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7928, decode.acc_seg: 3.2349, aux.loss_seg: 0.3348, aux.acc_seg: 2.4448, loss: 1.1276
2020-10-01 16:33:30,118 - mmseg - INFO - Iter [8700/10000]	lr: 3.275e-03, eta: 0:18:22, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7927, decode.acc_seg: 2.8804, aux.loss_seg: 0.3347, aux.acc_seg: 2.1029, loss: 1.1274
2020-10-01 16:34:04,693 - mmseg - INFO - Iter [8750/10000]	lr: 3.165e-03, eta: 0:17:38, time: 0.691, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7925, decode.acc_seg: 2.9998, aux.loss_seg: 0.3351, aux.acc_seg: 2.3336, loss: 1.1276
2020-10-01 16:34:39,389 - mmseg - INFO - Iter [8800/10000]	lr: 3.054e-03, eta: 0:16:55, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7939, decode.acc_seg: 2.7358, aux.loss_seg: 0.3349, aux.acc_seg: 2.4367, loss: 1.1287
2020-10-01 16:35:14,485 - mmseg - INFO - Iter [8850/10000]	lr: 2.943e-03, eta: 0:16:12, time: 0.702, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7937, decode.acc_seg: 3.1063, aux.loss_seg: 0.3350, aux.acc_seg: 2.5848, loss: 1.1286
2020-10-01 16:35:49,132 - mmseg - INFO - Iter [8900/10000]	lr: 2.832e-03, eta: 0:15:29, time: 0.693, data_time: 0.011, memory: 12264, decode.loss_seg: 0.7957, decode.acc_seg: 2.8988, aux.loss_seg: 0.3353, aux.acc_seg: 2.4490, loss: 1.1310
2020-10-01 16:37:10,910 - mmseg - INFO - Iter [8950/10000]	lr: 2.720e-03, eta: 0:14:51, time: 1.636, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7944, decode.acc_seg: 3.0382, aux.loss_seg: 0.3345, aux.acc_seg: 2.5464, loss: 1.1289
2020-10-01 16:37:45,479 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 16:37:45,480 - mmseg - INFO - Iter [9000/10000]	lr: 2.608e-03, eta: 0:14:08, time: 0.691, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7888, decode.acc_seg: 3.5277, aux.loss_seg: 0.3334, aux.acc_seg: 2.3253, loss: 1.1222
2020-10-01 16:38:20,366 - mmseg - INFO - Iter [9050/10000]	lr: 2.495e-03, eta: 0:13:24, time: 0.698, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7904, decode.acc_seg: 2.8086, aux.loss_seg: 0.3341, aux.acc_seg: 2.2146, loss: 1.1245
2020-10-01 16:38:55,284 - mmseg - INFO - Iter [9100/10000]	lr: 2.381e-03, eta: 0:12:41, time: 0.698, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7967, decode.acc_seg: 3.0196, aux.loss_seg: 0.3360, aux.acc_seg: 2.5601, loss: 1.1328
2020-10-01 16:39:29,593 - mmseg - INFO - Iter [9150/10000]	lr: 2.267e-03, eta: 0:11:58, time: 0.686, data_time: 0.011, memory: 12264, decode.loss_seg: 0.7907, decode.acc_seg: 2.7684, aux.loss_seg: 0.3342, aux.acc_seg: 2.6708, loss: 1.1249
2020-10-01 16:40:04,654 - mmseg - INFO - Iter [9200/10000]	lr: 2.152e-03, eta: 0:11:15, time: 0.701, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7938, decode.acc_seg: 3.1195, aux.loss_seg: 0.3348, aux.acc_seg: 2.3553, loss: 1.1286
2020-10-01 16:41:27,376 - mmseg - INFO - Iter [9250/10000]	lr: 2.036e-03, eta: 0:10:36, time: 1.655, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7900, decode.acc_seg: 2.6700, aux.loss_seg: 0.3338, aux.acc_seg: 2.2863, loss: 1.1238
2020-10-01 16:42:02,294 - mmseg - INFO - Iter [9300/10000]	lr: 1.920e-03, eta: 0:09:53, time: 0.698, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7921, decode.acc_seg: 3.0415, aux.loss_seg: 0.3347, aux.acc_seg: 2.3173, loss: 1.1267
2020-10-01 16:42:37,253 - mmseg - INFO - Iter [9350/10000]	lr: 1.802e-03, eta: 0:09:10, time: 0.699, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7912, decode.acc_seg: 3.0106, aux.loss_seg: 0.3339, aux.acc_seg: 2.3148, loss: 1.1252
2020-10-01 16:43:11,880 - mmseg - INFO - Iter [9400/10000]	lr: 1.684e-03, eta: 0:08:28, time: 0.693, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7939, decode.acc_seg: 2.5245, aux.loss_seg: 0.3353, aux.acc_seg: 2.2013, loss: 1.1292
2020-10-01 16:43:46,367 - mmseg - INFO - Iter [9450/10000]	lr: 1.565e-03, eta: 0:07:45, time: 0.690, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7887, decode.acc_seg: 3.0840, aux.loss_seg: 0.3331, aux.acc_seg: 2.2357, loss: 1.1218
2020-10-01 16:44:22,148 - mmseg - INFO - Iter [9500/10000]	lr: 1.445e-03, eta: 0:07:02, time: 0.715, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7914, decode.acc_seg: 3.0567, aux.loss_seg: 0.3338, aux.acc_seg: 2.7250, loss: 1.1252
2020-10-01 16:44:57,945 - mmseg - INFO - Iter [9550/10000]	lr: 1.324e-03, eta: 0:06:20, time: 0.716, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7936, decode.acc_seg: 3.5261, aux.loss_seg: 0.3344, aux.acc_seg: 2.6263, loss: 1.1280
2020-10-01 16:46:20,638 - mmseg - INFO - Iter [9600/10000]	lr: 1.201e-03, eta: 0:05:39, time: 1.654, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7893, decode.acc_seg: 2.7633, aux.loss_seg: 0.3334, aux.acc_seg: 2.3591, loss: 1.1227
2020-10-01 16:46:55,837 - mmseg - INFO - Iter [9650/10000]	lr: 1.076e-03, eta: 0:04:56, time: 0.704, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7907, decode.acc_seg: 2.8892, aux.loss_seg: 0.3341, aux.acc_seg: 2.5495, loss: 1.1248
2020-10-01 16:47:31,055 - mmseg - INFO - Iter [9700/10000]	lr: 9.503e-04, eta: 0:04:14, time: 0.705, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7922, decode.acc_seg: 2.8985, aux.loss_seg: 0.3347, aux.acc_seg: 2.3244, loss: 1.1269
2020-10-01 16:48:05,343 - mmseg - INFO - Iter [9750/10000]	lr: 8.220e-04, eta: 0:03:31, time: 0.686, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7896, decode.acc_seg: 2.6117, aux.loss_seg: 0.3337, aux.acc_seg: 2.3216, loss: 1.1233
2020-10-01 16:48:40,615 - mmseg - INFO - Iter [9800/10000]	lr: 6.912e-04, eta: 0:02:49, time: 0.705, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7899, decode.acc_seg: 2.7645, aux.loss_seg: 0.3342, aux.acc_seg: 2.5899, loss: 1.1241
2020-10-01 16:49:16,157 - mmseg - INFO - Iter [9850/10000]	lr: 5.570e-04, eta: 0:02:06, time: 0.711, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7923, decode.acc_seg: 3.5311, aux.loss_seg: 0.3340, aux.acc_seg: 2.4865, loss: 1.1263
2020-10-01 16:49:50,869 - mmseg - INFO - Iter [9900/10000]	lr: 4.182e-04, eta: 0:01:24, time: 0.694, data_time: 0.010, memory: 12264, decode.loss_seg: 0.7905, decode.acc_seg: 3.0571, aux.loss_seg: 0.3335, aux.acc_seg: 2.4780, loss: 1.1240
2020-10-01 16:51:13,266 - mmseg - INFO - Iter [9950/10000]	lr: 2.721e-04, eta: 0:00:42, time: 1.648, data_time: 0.009, memory: 12264, decode.loss_seg: 0.7912, decode.acc_seg: 3.3188, aux.loss_seg: 0.3341, aux.acc_seg: 2.2836, loss: 1.1253
2020-10-01 16:51:48,378 - mmseg - INFO - Saving checkpoint at 10000 iterations
2020-10-01 16:56:46,849 - mmseg - INFO - per class results:
Class                  IoU        Acc
background            0.65       0.65
aeroplane             1.88       1.91
bicycle               4.96       5.15
bird                  2.41       2.42
boat                  2.13       2.15
bottle                1.33       1.34
bus                   1.74      97.45
car                   1.50       1.51
cat                   1.16       1.17
chair                 3.07       3.13
cow                   1.68       1.69
diningtable           1.44       1.45
dog                   1.31       1.32
horse                 2.25       2.27
motorbike             2.20       2.21
person                2.17       2.19
pottedplant           2.24       2.30
sheep                 1.99       2.00
sofa                  1.38       1.39
train                 0.98       0.99
tvmonitor             2.11       2.12
Summary:
Scope                 mAcc global_Acc       mIoU      FWIoU       BIoU        BF1
global                6.51       2.66       1.93       0.96       7.39      74.83

2020-10-01 16:56:46,868 - mmseg - INFO - Exp name: bf1_bezier_10k_all_withbg.py
2020-10-01 16:56:46,868 - mmseg - INFO - Iter(val) [10000]	mIoU: 0.0193, mAcc: 0.0651, aAcc: 0.0266, FWIoU: 0.0096, BIoU: 0.0739, BF1: 0.7483
